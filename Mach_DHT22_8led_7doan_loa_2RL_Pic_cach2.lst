CCS PCM C Compiler, Version 5.101, 43599               09-Jun-23 19:43

               Filename:   D:\DA_VDK\do_an_vdk\do_an_vdk\Mach_DHT22_8led_7doan_loa_2RL_Pic_cach2.lst

               ROM used:   1561 words (19%)
                           Largest free fragment is 2048
               RAM used:   47 (13%) at main() level
                           66 (18%) worst case
               Stack used: 4 locations
               Stack size: 8

*
0000:  MOVLW  05
0001:  MOVWF  0A
0002:  GOTO   5BD
0003:  NOP
.................... #include <16f877a.h>
.................... //////////// Standard Header file for the PIC16F877A device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877A
*
00A2:  BTFSC  03.1
00A3:  GOTO   0A7
00A4:  MOVLW  56
00A5:  MOVWF  04
00A6:  BCF    03.7
00A7:  CLRF   77
00A8:  CLRF   78
00A9:  CLRF   79
00AA:  CLRF   7A
00AB:  CLRF   56
00AC:  CLRF   57
00AD:  CLRF   58
00AE:  CLRF   59
00AF:  MOVF   55,W
00B0:  IORWF  54,W
00B1:  IORWF  53,W
00B2:  IORWF  52,W
00B3:  BTFSC  03.2
00B4:  GOTO   0E5
00B5:  MOVLW  20
00B6:  MOVWF  5A
00B7:  BCF    03.0
00B8:  RLF    4E,F
00B9:  RLF    4F,F
00BA:  RLF    50,F
00BB:  RLF    51,F
00BC:  RLF    56,F
00BD:  RLF    57,F
00BE:  RLF    58,F
00BF:  RLF    59,F
00C0:  MOVF   55,W
00C1:  SUBWF  59,W
00C2:  BTFSS  03.2
00C3:  GOTO   0CE
00C4:  MOVF   54,W
00C5:  SUBWF  58,W
00C6:  BTFSS  03.2
00C7:  GOTO   0CE
00C8:  MOVF   53,W
00C9:  SUBWF  57,W
00CA:  BTFSS  03.2
00CB:  GOTO   0CE
00CC:  MOVF   52,W
00CD:  SUBWF  56,W
00CE:  BTFSS  03.0
00CF:  GOTO   0DF
00D0:  MOVF   52,W
00D1:  SUBWF  56,F
00D2:  MOVF   53,W
00D3:  BTFSS  03.0
00D4:  INCFSZ 53,W
00D5:  SUBWF  57,F
00D6:  MOVF   54,W
00D7:  BTFSS  03.0
00D8:  INCFSZ 54,W
00D9:  SUBWF  58,F
00DA:  MOVF   55,W
00DB:  BTFSS  03.0
00DC:  INCFSZ 55,W
00DD:  SUBWF  59,F
00DE:  BSF    03.0
00DF:  RLF    77,F
00E0:  RLF    78,F
00E1:  RLF    79,F
00E2:  RLF    7A,F
00E3:  DECFSZ 5A,F
00E4:  GOTO   0B7
00E5:  MOVF   56,W
00E6:  MOVWF  00
00E7:  INCF   04,F
00E8:  MOVF   57,W
00E9:  MOVWF  00
00EA:  INCF   04,F
00EB:  MOVF   58,W
00EC:  MOVWF  00
00ED:  INCF   04,F
00EE:  MOVF   59,W
00EF:  MOVWF  00
00F0:  RETURN
00F1:  MOVF   4A,W
00F2:  XORWF  4B,W
00F3:  ANDLW  80
00F4:  MOVWF  4D
00F5:  BTFSS  4A.7
00F6:  GOTO   0F9
00F7:  COMF   4A,F
00F8:  INCF   4A,F
00F9:  BTFSS  4B.7
00FA:  GOTO   0FD
00FB:  COMF   4B,F
00FC:  INCF   4B,F
00FD:  MOVF   4B,W
00FE:  CLRF   78
00FF:  SUBWF  4A,W
0100:  BTFSC  03.0
0101:  GOTO   105
0102:  MOVF   4A,W
0103:  MOVWF  77
0104:  GOTO   111
0105:  CLRF   77
0106:  MOVLW  08
0107:  MOVWF  4C
0108:  RLF    4A,F
0109:  RLF    77,F
010A:  MOVF   4B,W
010B:  SUBWF  77,W
010C:  BTFSC  03.0
010D:  MOVWF  77
010E:  RLF    78,F
010F:  DECFSZ 4C,F
0110:  GOTO   108
0111:  BTFSS  4D.7
0112:  GOTO   115
0113:  COMF   78,F
0114:  INCF   78,F
0115:  RETURN
.................... 
.................... #list
.................... 
.................... #fuses      hs
.................... #use delay(clock=20M)
*
0004:  MOVLW  5C
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
.................... 
.................... #define mod     pin_e1
.................... #define up      pin_e0
.................... #define dw      pin_e2
.................... 
.................... #define loa     pin_a2
.................... #define rl1     pin_c1
.................... #define rl2     pin_c2
.................... #define led11    pin_c3
.................... #define led22    pin_c4
.................... 
.................... unsigned int32 tt_mod,dem;
.................... 
.................... unsigned int8 ma7doan[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xff};
*
05CA:  MOVLW  C0
05CB:  BCF    03.5
05CC:  MOVWF  28
05CD:  MOVLW  F9
05CE:  MOVWF  29
05CF:  MOVLW  A4
05D0:  MOVWF  2A
05D1:  MOVLW  B0
05D2:  MOVWF  2B
05D3:  MOVLW  99
05D4:  MOVWF  2C
05D5:  MOVLW  92
05D6:  MOVWF  2D
05D7:  MOVLW  82
05D8:  MOVWF  2E
05D9:  MOVLW  F8
05DA:  MOVWF  2F
05DB:  MOVLW  80
05DC:  MOVWF  30
05DD:  MOVLW  90
05DE:  MOVWF  31
05DF:  MOVLW  FF
05E0:  MOVWF  32
.................... 
.................... signed int8 led0,led1,led2,led3,led4,led5,led6,led7;
.................... UNSIGNED int8 ND2,ND1,DA2,DA1;
.................... unsigned int32    nd,da;
.................... signed int8    ghnd,ghda;
.................... void quet_led();
.................... void tt_mode();
.................... void delay_quet_led(unsigned int8 h);
.................... #include <dht22.c>
.................... #BIT  DHT_DATA_OUT =  0x07.0
.................... #BIT  DHT_DATA_IN  =  0x07.0
.................... #BIT  DHT_DDR_DATA =  0x87.0     // set tris cua port A
.................... 
.................... #define DHT_ER    0
.................... #define DHT_OK    1
.................... 
.................... #define DDROUT    0
.................... #define DDRIN     1
.................... 
.................... //unsigned int8 DHT_GetTemHumi (unsigned int8 &tem1,&tem2,unsigned int8 &humi1,&humi2);
.................... 
.................... unsigned int8 DHT_GetTemHumi(unsigned int8 &tem1,&tem2,unsigned int8 &humi1,&humi2)
.................... {
....................    unsigned int8 buffer[5]={0,0,0,0,0};
*
0122:  CLRF   4A
0123:  CLRF   4B
0124:  CLRF   4C
0125:  CLRF   4D
0126:  CLRF   4E
....................    unsigned int8 ii,i,checksum;
....................    
....................    DHT_DDR_DATA=DDROUT;   // set la cong ra, huong vao hay ra
0127:  BSF    03.5
0128:  BCF    07.0
....................    DHT_DATA_OUT=1;
0129:  BCF    03.5
012A:  BSF    07.0
....................    delay_us(60);
012B:  MOVLW  63
012C:  MOVWF  77
012D:  DECFSZ 77,F
012E:  GOTO   12D
012F:  GOTO   130
....................    DHT_DATA_OUT=0;
0130:  BCF    07.0
....................    delay_quet_led(3); // it nhat 18ms
0131:  MOVLW  03
0132:  MOVWF  5A
0133:  CALL   099
....................    DHT_DATA_OUT=1;    
0134:  BSF    07.0
....................    DHT_DDR_DATA=DDRIN;//set la cong vao
0135:  BSF    03.5
0136:  BSF    07.0
....................    delay_us(60);
0137:  MOVLW  63
0138:  MOVWF  77
0139:  DECFSZ 77,F
013A:  GOTO   139
013B:  GOTO   13C
....................    if(DHT_DATA_IN)return DHT_ER ;
013C:  BCF    03.5
013D:  BTFSS  07.0
013E:  GOTO   143
013F:  MOVLW  00
0140:  MOVWF  78
0141:  GOTO   193
0142:  GOTO   145
....................    else while(!(DHT_DATA_IN));   //Doi DaTa len 1
0143:  BTFSS  07.0
0144:  GOTO   143
....................    delay_us(60);//cho 60us
0145:  MOVLW  63
0146:  MOVWF  77
0147:  DECFSZ 77,F
0148:  GOTO   147
0149:  GOTO   14A
....................    if(!DHT_DATA_IN)return DHT_ER;
014A:  BTFSC  07.0
014B:  GOTO   150
014C:  MOVLW  00
014D:  MOVWF  78
014E:  GOTO   193
014F:  GOTO   152
....................    else while((DHT_DATA_IN));    //Doi Data ve 0
0150:  BTFSC  07.0
0151:  GOTO   150
....................    //Bat dau doc du lieu
....................    for(i=0;i<5;i++)
0152:  CLRF   50
0153:  MOVF   50,W
0154:  SUBLW  04
0155:  BTFSS  03.0
0156:  GOTO   17D
....................    {
....................       for(ii=0;ii<8;ii++)
0157:  CLRF   4F
0158:  MOVF   4F,W
0159:  SUBLW  07
015A:  BTFSS  03.0
015B:  GOTO   17B
....................       {   
....................          while((!DHT_DATA_IN));//Doi Data len 1
015C:  BTFSS  07.0
015D:  GOTO   15C
....................          delay_us(50);
015E:  MOVLW  53
015F:  MOVWF  77
0160:  DECFSZ 77,F
0161:  GOTO   160
....................          if(DHT_DATA_IN)
0162:  BTFSS  07.0
0163:  GOTO   179
....................          {
....................             buffer[i]|=(1<<(7-ii));
0164:  MOVLW  4A
0165:  ADDWF  50,W
0166:  MOVWF  04
0167:  BCF    03.7
0168:  MOVF   4F,W
0169:  SUBLW  07
016A:  MOVWF  78
016B:  MOVLW  01
016C:  MOVWF  77
016D:  MOVF   78,F
016E:  BTFSC  03.2
016F:  GOTO   174
0170:  BCF    03.0
0171:  RLF    77,F
0172:  DECFSZ 78,F
0173:  GOTO   170
0174:  MOVF   77,W
0175:  IORWF  00,W
0176:  MOVWF  00
....................             while((DHT_DATA_IN));//Doi Data xuong 0
0177:  BTFSC  07.0
0178:  GOTO   177
....................          }
0179:  INCF   4F,F
017A:  GOTO   158
....................       }
017B:  INCF   50,F
017C:  GOTO   153
....................    }
....................    checksum=buffer[0]+buffer[1]+buffer[2]+buffer[3];
017D:  MOVF   4B,W
017E:  ADDWF  4A,W
017F:  ADDWF  4C,W
0180:  ADDWF  4D,W
0181:  MOVWF  51
....................    if((checksum)!=buffer[4])return DHT_ER;
0182:  MOVF   4E,W
0183:  SUBWF  51,W
0184:  BTFSC  03.2
0185:  GOTO   189
0186:  MOVLW  00
0187:  MOVWF  78
0188:  GOTO   193
....................    tem1  =   buffer[2];//gia tri phan nguyen
0189:  MOVF   4C,W
018A:  MOVWF  3B
....................    tem2  =   buffer[3];//gia tri phan thap phan
018B:  MOVF   4D,W
018C:  MOVWF  3C
....................    humi1 =   buffer[0];//gia tri phan nguyen
018D:  MOVF   4A,W
018E:  MOVWF  3D
....................    humi2 =   buffer[1];//gia tri phan thap phan
018F:  MOVF   4B,W
0190:  MOVWF  3E
....................    return DHT_OK;
0191:  MOVLW  01
0192:  MOVWF  78
.................... }
.................... 
.................... 
.................... 
.................... 
.................... 
.................... void tt_mode()
.................... {
....................    if(tt_mod==0)
*
0116:  MOVF   20,F
0117:  BTFSS  03.2
0118:  GOTO   3B0
0119:  MOVF   21,F
011A:  BTFSS  03.2
011B:  GOTO   3B0
011C:  MOVF   22,F
011D:  BTFSS  03.2
011E:  GOTO   3B0
011F:  MOVF   23,F
0120:  BTFSS  03.2
0121:  GOTO   3B0
....................    {
....................       if(DHT_GetTemHumi(ND2,ND1,DA2,DA1)==1)
*
0193:  DECFSZ 78,W
0194:  GOTO   3AF
....................       {
....................          nd=ND2*256+ND1;
0195:  CLRF   7A
0196:  CLRF   4A
0197:  MOVF   3C,W
0198:  ADDWF  4A,W
0199:  MOVWF  3F
019A:  MOVF   3B,W
019B:  MOVWF  40
019C:  MOVLW  00
019D:  BTFSC  03.0
019E:  MOVLW  01
019F:  ADDWF  40,F
01A0:  CLRF   41
01A1:  BTFSC  03.0
01A2:  INCF   41,F
01A3:  CLRF   42
....................          nd=nd/10;
01A4:  BCF    03.1
01A5:  MOVF   42,W
01A6:  MOVWF  51
01A7:  MOVF   41,W
01A8:  MOVWF  50
01A9:  MOVF   40,W
01AA:  MOVWF  4F
01AB:  MOVF   3F,W
01AC:  MOVWF  4E
01AD:  CLRF   55
01AE:  CLRF   54
01AF:  CLRF   53
01B0:  MOVLW  0A
01B1:  MOVWF  52
01B2:  CALL   0A2
01B3:  MOVF   7A,W
01B4:  MOVWF  42
01B5:  MOVF   79,W
01B6:  MOVWF  41
01B7:  MOVF   78,W
01B8:  MOVWF  40
01B9:  MOVF   77,W
01BA:  MOVWF  3F
....................          da=DA2*256+DA1;
01BB:  CLRF   7A
01BC:  CLRF   4A
01BD:  MOVF   3E,W
01BE:  ADDWF  4A,W
01BF:  MOVWF  43
01C0:  MOVF   3D,W
01C1:  MOVWF  44
01C2:  MOVLW  00
01C3:  BTFSC  03.0
01C4:  MOVLW  01
01C5:  ADDWF  44,F
01C6:  CLRF   45
01C7:  BTFSC  03.0
01C8:  INCF   45,F
01C9:  CLRF   46
....................          da=da/10;
01CA:  BCF    03.1
01CB:  MOVF   46,W
01CC:  MOVWF  51
01CD:  MOVF   45,W
01CE:  MOVWF  50
01CF:  MOVF   44,W
01D0:  MOVWF  4F
01D1:  MOVF   43,W
01D2:  MOVWF  4E
01D3:  CLRF   55
01D4:  CLRF   54
01D5:  CLRF   53
01D6:  MOVLW  0A
01D7:  MOVWF  52
01D8:  CALL   0A2
01D9:  MOVF   7A,W
01DA:  MOVWF  46
01DB:  MOVF   79,W
01DC:  MOVWF  45
01DD:  MOVF   78,W
01DE:  MOVWF  44
01DF:  MOVF   77,W
01E0:  MOVWF  43
....................          
....................          if(nd>ghnd)
01E1:  MOVF   47,W
01E2:  MOVWF  77
01E3:  CLRF   78
01E4:  CLRF   79
01E5:  CLRF   7A
01E6:  BTFSS  77.7
01E7:  GOTO   1EB
01E8:  DECF   78,F
01E9:  DECF   79,F
01EA:  DECF   7A,F
01EB:  BTFSC  7A.7
01EC:  GOTO   203
01ED:  MOVF   7A,W
01EE:  SUBWF  42,W
01EF:  BTFSS  03.0
01F0:  GOTO   285
01F1:  BTFSS  03.2
01F2:  GOTO   203
01F3:  MOVF   79,W
01F4:  SUBWF  41,W
01F5:  BTFSS  03.0
01F6:  GOTO   285
01F7:  BTFSS  03.2
01F8:  GOTO   203
01F9:  MOVF   78,W
01FA:  SUBWF  40,W
01FB:  BTFSS  03.0
01FC:  GOTO   285
01FD:  BTFSS  03.2
01FE:  GOTO   203
01FF:  MOVF   3F,W
0200:  SUBWF  77,W
0201:  BTFSC  03.0
0202:  GOTO   285
....................          {
....................             led0 = ma7doan[nd/10];
0203:  BCF    03.1
0204:  MOVF   42,W
0205:  MOVWF  51
0206:  MOVF   41,W
0207:  MOVWF  50
0208:  MOVF   40,W
0209:  MOVWF  4F
020A:  MOVF   3F,W
020B:  MOVWF  4E
020C:  CLRF   55
020D:  CLRF   54
020E:  CLRF   53
020F:  MOVLW  0A
0210:  MOVWF  52
0211:  CALL   0A2
0212:  MOVLW  28
0213:  ADDWF  77,W
0214:  MOVWF  04
0215:  BCF    03.7
0216:  BTFSC  78.0
0217:  BSF    03.7
0218:  MOVF   00,W
0219:  MOVWF  33
....................             led1 = ma7doan[nd%10]; 
021A:  BSF    03.1
021B:  MOVLW  4A
021C:  MOVWF  04
021D:  BCF    03.7
021E:  MOVF   42,W
021F:  MOVWF  51
0220:  MOVF   41,W
0221:  MOVWF  50
0222:  MOVF   40,W
0223:  MOVWF  4F
0224:  MOVF   3F,W
0225:  MOVWF  4E
0226:  CLRF   55
0227:  CLRF   54
0228:  CLRF   53
0229:  MOVLW  0A
022A:  MOVWF  52
022B:  CALL   0A2
022C:  MOVLW  28
022D:  ADDWF  4A,W
022E:  MOVWF  04
022F:  BCF    03.7
0230:  BTFSC  4B.0
0231:  BSF    03.7
0232:  MOVF   00,W
0233:  MOVWF  34
....................             led2 = 0x9c;                              
0234:  MOVLW  9C
0235:  MOVWF  35
....................             led3 = 0xc6; 
0236:  MOVLW  C6
0237:  MOVWF  36
....................             
....................             led4 = ma7doan[ghnd/10];           
0238:  MOVF   47,W
0239:  MOVWF  4A
023A:  MOVLW  0A
023B:  MOVWF  4B
023C:  CALL   0F1
023D:  MOVLW  28
023E:  ADDWF  78,W
023F:  MOVWF  04
0240:  BCF    03.7
0241:  MOVF   00,W
0242:  MOVWF  37
....................             led5 = ma7doan[ghnd%10];   
0243:  MOVF   47,W
0244:  MOVWF  4A
0245:  MOVLW  0A
0246:  MOVWF  4B
0247:  CALL   0F1
0248:  MOVLW  28
0249:  ADDWF  77,W
024A:  MOVWF  04
024B:  BCF    03.7
024C:  MOVF   00,W
024D:  MOVWF  38
....................             led6 = 0x9c;        
024E:  MOVLW  9C
024F:  MOVWF  39
....................             led7 = 0xc6;   
0250:  MOVLW  C6
0251:  MOVWF  3A
....................             output_high(rl1);
0252:  BCF    49.1
0253:  MOVF   49,W
0254:  BSF    03.5
0255:  MOVWF  07
0256:  BCF    03.5
0257:  BSF    07.1
....................             output_low(rl2);
0258:  BCF    49.2
0259:  MOVF   49,W
025A:  BSF    03.5
025B:  MOVWF  07
025C:  BCF    03.5
025D:  BCF    07.2
....................             output_high(loa);       
025E:  BSF    03.5
025F:  BCF    05.2
0260:  BCF    03.5
0261:  BSF    05.2
....................             output_high(led11);
0262:  BCF    49.3
0263:  MOVF   49,W
0264:  BSF    03.5
0265:  MOVWF  07
0266:  BCF    03.5
0267:  BSF    07.3
....................             output_low(led22);
0268:  BCF    49.4
0269:  MOVF   49,W
026A:  BSF    03.5
026B:  MOVWF  07
026C:  BCF    03.5
026D:  BCF    07.4
....................             delay_quet_led(65);
026E:  MOVLW  41
026F:  MOVWF  5A
0270:  CALL   099
....................             output_low(loa);       
0271:  BSF    03.5
0272:  BCF    05.2
0273:  BCF    03.5
0274:  BCF    05.2
....................             output_low(led11);
0275:  BCF    49.3
0276:  MOVF   49,W
0277:  BSF    03.5
0278:  MOVWF  07
0279:  BCF    03.5
027A:  BCF    07.3
....................             output_low(led22);
027B:  BCF    49.4
027C:  MOVF   49,W
027D:  BSF    03.5
027E:  MOVWF  07
027F:  BCF    03.5
0280:  BCF    07.4
....................             delay_quet_led(65);
0281:  MOVLW  41
0282:  MOVWF  5A
0283:  CALL   099
....................          }
0284:  GOTO   3AF
....................          else if(da<ghda)
0285:  MOVF   48,W
0286:  MOVWF  77
0287:  CLRF   78
0288:  CLRF   79
0289:  CLRF   7A
028A:  BTFSS  77.7
028B:  GOTO   28F
028C:  DECF   78,F
028D:  DECF   79,F
028E:  DECF   7A,F
028F:  BTFSC  7A.7
0290:  GOTO   329
0291:  MOVF   46,W
0292:  SUBWF  7A,W
0293:  BTFSS  03.0
0294:  GOTO   329
0295:  BTFSS  03.2
0296:  GOTO   2A7
0297:  MOVF   45,W
0298:  SUBWF  79,W
0299:  BTFSS  03.0
029A:  GOTO   329
029B:  BTFSS  03.2
029C:  GOTO   2A7
029D:  MOVF   44,W
029E:  SUBWF  78,W
029F:  BTFSS  03.0
02A0:  GOTO   329
02A1:  BTFSS  03.2
02A2:  GOTO   2A7
02A3:  MOVF   77,W
02A4:  SUBWF  43,W
02A5:  BTFSC  03.0
02A6:  GOTO   329
....................          {
....................             led0 = ma7doan[da/10];
02A7:  BCF    03.1
02A8:  MOVF   46,W
02A9:  MOVWF  51
02AA:  MOVF   45,W
02AB:  MOVWF  50
02AC:  MOVF   44,W
02AD:  MOVWF  4F
02AE:  MOVF   43,W
02AF:  MOVWF  4E
02B0:  CLRF   55
02B1:  CLRF   54
02B2:  CLRF   53
02B3:  MOVLW  0A
02B4:  MOVWF  52
02B5:  CALL   0A2
02B6:  MOVLW  28
02B7:  ADDWF  77,W
02B8:  MOVWF  04
02B9:  BCF    03.7
02BA:  BTFSC  78.0
02BB:  BSF    03.7
02BC:  MOVF   00,W
02BD:  MOVWF  33
....................             led1 = ma7doan[da%10]; 
02BE:  BSF    03.1
02BF:  MOVLW  4A
02C0:  MOVWF  04
02C1:  BCF    03.7
02C2:  MOVF   46,W
02C3:  MOVWF  51
02C4:  MOVF   45,W
02C5:  MOVWF  50
02C6:  MOVF   44,W
02C7:  MOVWF  4F
02C8:  MOVF   43,W
02C9:  MOVWF  4E
02CA:  CLRF   55
02CB:  CLRF   54
02CC:  CLRF   53
02CD:  MOVLW  0A
02CE:  MOVWF  52
02CF:  CALL   0A2
02D0:  MOVLW  28
02D1:  ADDWF  4A,W
02D2:  MOVWF  04
02D3:  BCF    03.7
02D4:  BTFSC  4B.0
02D5:  BSF    03.7
02D6:  MOVF   00,W
02D7:  MOVWF  34
....................             led2 = 0xaf;                              
02D8:  MOVLW  AF
02D9:  MOVWF  35
....................             led3 = 0x89; 
02DA:  MOVLW  89
02DB:  MOVWF  36
....................             
....................             led4 = ma7doan[ghda/10];           
02DC:  MOVF   48,W
02DD:  MOVWF  4A
02DE:  MOVLW  0A
02DF:  MOVWF  4B
02E0:  CALL   0F1
02E1:  MOVLW  28
02E2:  ADDWF  78,W
02E3:  MOVWF  04
02E4:  BCF    03.7
02E5:  MOVF   00,W
02E6:  MOVWF  37
....................             led5 = ma7doan[ghda%10];   
02E7:  MOVF   48,W
02E8:  MOVWF  4A
02E9:  MOVLW  0A
02EA:  MOVWF  4B
02EB:  CALL   0F1
02EC:  MOVLW  28
02ED:  ADDWF  77,W
02EE:  MOVWF  04
02EF:  BCF    03.7
02F0:  MOVF   00,W
02F1:  MOVWF  38
....................             led6 = 0xaf;        
02F2:  MOVLW  AF
02F3:  MOVWF  39
....................             led7 = 0x89;  
02F4:  MOVLW  89
02F5:  MOVWF  3A
....................             output_high(rl2);
02F6:  BCF    49.2
02F7:  MOVF   49,W
02F8:  BSF    03.5
02F9:  MOVWF  07
02FA:  BCF    03.5
02FB:  BSF    07.2
....................             output_low(rl1);
02FC:  BCF    49.1
02FD:  MOVF   49,W
02FE:  BSF    03.5
02FF:  MOVWF  07
0300:  BCF    03.5
0301:  BCF    07.1
....................             output_high(loa);       
0302:  BSF    03.5
0303:  BCF    05.2
0304:  BCF    03.5
0305:  BSF    05.2
....................             output_high(led22);
0306:  BCF    49.4
0307:  MOVF   49,W
0308:  BSF    03.5
0309:  MOVWF  07
030A:  BCF    03.5
030B:  BSF    07.4
....................             output_low(led11);
030C:  BCF    49.3
030D:  MOVF   49,W
030E:  BSF    03.5
030F:  MOVWF  07
0310:  BCF    03.5
0311:  BCF    07.3
....................             delay_quet_led(65);
0312:  MOVLW  41
0313:  MOVWF  5A
0314:  CALL   099
....................             output_low(loa);       
0315:  BSF    03.5
0316:  BCF    05.2
0317:  BCF    03.5
0318:  BCF    05.2
....................             output_low(led22);
0319:  BCF    49.4
031A:  MOVF   49,W
031B:  BSF    03.5
031C:  MOVWF  07
031D:  BCF    03.5
031E:  BCF    07.4
....................             output_low(led11);
031F:  BCF    49.3
0320:  MOVF   49,W
0321:  BSF    03.5
0322:  MOVWF  07
0323:  BCF    03.5
0324:  BCF    07.3
....................             delay_quet_led(65);
0325:  MOVLW  41
0326:  MOVWF  5A
0327:  CALL   099
....................          }
0328:  GOTO   3AF
....................          else
....................          {
....................             output_low(rl1);
0329:  BCF    49.1
032A:  MOVF   49,W
032B:  BSF    03.5
032C:  MOVWF  07
032D:  BCF    03.5
032E:  BCF    07.1
....................             output_low(rl2);
032F:  BCF    49.2
0330:  MOVF   49,W
0331:  BSF    03.5
0332:  MOVWF  07
0333:  BCF    03.5
0334:  BCF    07.2
....................             output_low(loa);       
0335:  BSF    03.5
0336:  BCF    05.2
0337:  BCF    03.5
0338:  BCF    05.2
....................             output_low(led22);
0339:  BCF    49.4
033A:  MOVF   49,W
033B:  BSF    03.5
033C:  MOVWF  07
033D:  BCF    03.5
033E:  BCF    07.4
....................             output_low(led11);
033F:  BCF    49.3
0340:  MOVF   49,W
0341:  BSF    03.5
0342:  MOVWF  07
0343:  BCF    03.5
0344:  BCF    07.3
....................             led0 = ma7doan[nd/10];
0345:  BCF    03.1
0346:  MOVF   42,W
0347:  MOVWF  51
0348:  MOVF   41,W
0349:  MOVWF  50
034A:  MOVF   40,W
034B:  MOVWF  4F
034C:  MOVF   3F,W
034D:  MOVWF  4E
034E:  CLRF   55
034F:  CLRF   54
0350:  CLRF   53
0351:  MOVLW  0A
0352:  MOVWF  52
0353:  CALL   0A2
0354:  MOVLW  28
0355:  ADDWF  77,W
0356:  MOVWF  04
0357:  BCF    03.7
0358:  BTFSC  78.0
0359:  BSF    03.7
035A:  MOVF   00,W
035B:  MOVWF  33
....................             led1 = ma7doan[nd%10]; 
035C:  BSF    03.1
035D:  MOVLW  4A
035E:  MOVWF  04
035F:  BCF    03.7
0360:  MOVF   42,W
0361:  MOVWF  51
0362:  MOVF   41,W
0363:  MOVWF  50
0364:  MOVF   40,W
0365:  MOVWF  4F
0366:  MOVF   3F,W
0367:  MOVWF  4E
0368:  CLRF   55
0369:  CLRF   54
036A:  CLRF   53
036B:  MOVLW  0A
036C:  MOVWF  52
036D:  CALL   0A2
036E:  MOVLW  28
036F:  ADDWF  4A,W
0370:  MOVWF  04
0371:  BCF    03.7
0372:  BTFSC  4B.0
0373:  BSF    03.7
0374:  MOVF   00,W
0375:  MOVWF  34
....................             led2 = 0x9c;                              
0376:  MOVLW  9C
0377:  MOVWF  35
....................             led3 = 0xc6; 
0378:  MOVLW  C6
0379:  MOVWF  36
....................             
....................             led4 = ma7doan[da/10];           
037A:  BCF    03.1
037B:  MOVF   46,W
037C:  MOVWF  51
037D:  MOVF   45,W
037E:  MOVWF  50
037F:  MOVF   44,W
0380:  MOVWF  4F
0381:  MOVF   43,W
0382:  MOVWF  4E
0383:  CLRF   55
0384:  CLRF   54
0385:  CLRF   53
0386:  MOVLW  0A
0387:  MOVWF  52
0388:  CALL   0A2
0389:  MOVLW  28
038A:  ADDWF  77,W
038B:  MOVWF  04
038C:  BCF    03.7
038D:  BTFSC  78.0
038E:  BSF    03.7
038F:  MOVF   00,W
0390:  MOVWF  37
....................             led5 = ma7doan[da%10];   
0391:  BSF    03.1
0392:  MOVLW  4A
0393:  MOVWF  04
0394:  BCF    03.7
0395:  MOVF   46,W
0396:  MOVWF  51
0397:  MOVF   45,W
0398:  MOVWF  50
0399:  MOVF   44,W
039A:  MOVWF  4F
039B:  MOVF   43,W
039C:  MOVWF  4E
039D:  CLRF   55
039E:  CLRF   54
039F:  CLRF   53
03A0:  MOVLW  0A
03A1:  MOVWF  52
03A2:  CALL   0A2
03A3:  MOVLW  28
03A4:  ADDWF  4A,W
03A5:  MOVWF  04
03A6:  BCF    03.7
03A7:  BTFSC  4B.0
03A8:  BSF    03.7
03A9:  MOVF   00,W
03AA:  MOVWF  38
....................             led6 = 0xaf;        
03AB:  MOVLW  AF
03AC:  MOVWF  39
....................             led7 = 0x89;   
03AD:  MOVLW  89
03AE:  MOVWF  3A
....................          } 
....................       }    
....................    }
03AF:  GOTO   40B
....................    else if(tt_mod==1)
03B0:  DECFSZ 20,W
03B1:  GOTO   3DD
03B2:  MOVF   21,F
03B3:  BTFSS  03.2
03B4:  GOTO   3DD
03B5:  MOVF   22,F
03B6:  BTFSS  03.2
03B7:  GOTO   3DD
03B8:  MOVF   23,F
03B9:  BTFSS  03.2
03BA:  GOTO   3DD
....................    {
....................       led0 = ma7doan[5];
03BB:  MOVF   2D,W
03BC:  MOVWF  33
....................       led1 = 0x86;
03BD:  MOVLW  86
03BE:  MOVWF  34
....................       led2 = ma7doan[ghnd/10];
03BF:  MOVF   47,W
03C0:  MOVWF  4A
03C1:  MOVLW  0A
03C2:  MOVWF  4B
03C3:  CALL   0F1
03C4:  MOVLW  28
03C5:  ADDWF  78,W
03C6:  MOVWF  04
03C7:  BCF    03.7
03C8:  MOVF   00,W
03C9:  MOVWF  35
....................       led3 = ma7doan[ghnd%10]; 
03CA:  MOVF   47,W
03CB:  MOVWF  4A
03CC:  MOVLW  0A
03CD:  MOVWF  4B
03CE:  CALL   0F1
03CF:  MOVLW  28
03D0:  ADDWF  77,W
03D1:  MOVWF  04
03D2:  BCF    03.7
03D3:  MOVF   00,W
03D4:  MOVWF  36
....................       led4 = 0x9c;                              
03D5:  MOVLW  9C
03D6:  MOVWF  37
....................       led5 = 0xc6;  
03D7:  MOVLW  C6
03D8:  MOVWF  38
....................       led6 = 0xff;        
03D9:  MOVLW  FF
03DA:  MOVWF  39
....................       led7 = 0xff;   
03DB:  MOVWF  3A
....................    }
03DC:  GOTO   40B
....................    else if(tt_mod==2)
03DD:  MOVF   20,W
03DE:  SUBLW  02
03DF:  BTFSS  03.2
03E0:  GOTO   40B
03E1:  MOVF   21,F
03E2:  BTFSS  03.2
03E3:  GOTO   40B
03E4:  MOVF   22,F
03E5:  BTFSS  03.2
03E6:  GOTO   40B
03E7:  MOVF   23,F
03E8:  BTFSS  03.2
03E9:  GOTO   40B
....................    {
....................       led0 = ma7doan[5];
03EA:  MOVF   2D,W
03EB:  MOVWF  33
....................       led1 = 0x89;
03EC:  MOVLW  89
03ED:  MOVWF  34
....................       led2 = ma7doan[ghda/10];
03EE:  MOVF   48,W
03EF:  MOVWF  4A
03F0:  MOVLW  0A
03F1:  MOVWF  4B
03F2:  CALL   0F1
03F3:  MOVLW  28
03F4:  ADDWF  78,W
03F5:  MOVWF  04
03F6:  BCF    03.7
03F7:  MOVF   00,W
03F8:  MOVWF  35
....................       led3 = ma7doan[ghda%10]; 
03F9:  MOVF   48,W
03FA:  MOVWF  4A
03FB:  MOVLW  0A
03FC:  MOVWF  4B
03FD:  CALL   0F1
03FE:  MOVLW  28
03FF:  ADDWF  77,W
0400:  MOVWF  04
0401:  BCF    03.7
0402:  MOVF   00,W
0403:  MOVWF  36
....................       led4 = 0xaf;                              
0404:  MOVLW  AF
0405:  MOVWF  37
....................       led5 = 0x89;  
0406:  MOVLW  89
0407:  MOVWF  38
....................       led6 = 0xff;        
0408:  MOVLW  FF
0409:  MOVWF  39
....................       led7 = 0xff;   
040A:  MOVWF  3A
....................    }
040B:  RETURN
.................... }
.................... 
.................... void quet_led()       // ham hien thi trong 1 giay lam bao nhieu lan
.................... {
....................    output_d(led0);      output_low(pin_b2);        delay_ms(1);         output_high(pin_b2);        // 100ms thi hien thi lam 5 lan 2 led
*
0018:  BSF    03.5
0019:  CLRF   08
001A:  BCF    03.5
001B:  MOVF   33,W
001C:  MOVWF  08
001D:  BSF    03.5
001E:  BCF    06.2
001F:  BCF    03.5
0020:  BCF    06.2
0021:  MOVLW  01
0022:  MOVWF  5C
0023:  CALL   004
0024:  BSF    03.5
0025:  BCF    06.2
0026:  BCF    03.5
0027:  BSF    06.2
....................    output_d(led1);      output_low(pin_b3);        delay_ms(1);         output_high(pin_b3);
0028:  BSF    03.5
0029:  CLRF   08
002A:  BCF    03.5
002B:  MOVF   34,W
002C:  MOVWF  08
002D:  BSF    03.5
002E:  BCF    06.3
002F:  BCF    03.5
0030:  BCF    06.3
0031:  MOVLW  01
0032:  MOVWF  5C
0033:  CALL   004
0034:  BSF    03.5
0035:  BCF    06.3
0036:  BCF    03.5
0037:  BSF    06.3
....................    output_d(led2);      output_low(pin_b4);        delay_ms(1);         output_high(pin_b4);        // 100ms thi hien thi lam 5 lan
0038:  BSF    03.5
0039:  CLRF   08
003A:  BCF    03.5
003B:  MOVF   35,W
003C:  MOVWF  08
003D:  BSF    03.5
003E:  BCF    06.4
003F:  BCF    03.5
0040:  BCF    06.4
0041:  MOVLW  01
0042:  MOVWF  5C
0043:  CALL   004
0044:  BSF    03.5
0045:  BCF    06.4
0046:  BCF    03.5
0047:  BSF    06.4
....................    output_d(led3);      output_low(pin_b1);        delay_ms(1);         output_high(pin_b1);
0048:  BSF    03.5
0049:  CLRF   08
004A:  BCF    03.5
004B:  MOVF   36,W
004C:  MOVWF  08
004D:  BSF    03.5
004E:  BCF    06.1
004F:  BCF    03.5
0050:  BCF    06.1
0051:  MOVLW  01
0052:  MOVWF  5C
0053:  CALL   004
0054:  BSF    03.5
0055:  BCF    06.1
0056:  BCF    03.5
0057:  BSF    06.1
....................    output_d(led4);      output_low(pin_b5);        delay_ms(1);         output_high(pin_b5);        // 100ms thi hien thi lam 5 lan
0058:  BSF    03.5
0059:  CLRF   08
005A:  BCF    03.5
005B:  MOVF   37,W
005C:  MOVWF  08
005D:  BSF    03.5
005E:  BCF    06.5
005F:  BCF    03.5
0060:  BCF    06.5
0061:  MOVLW  01
0062:  MOVWF  5C
0063:  CALL   004
0064:  BSF    03.5
0065:  BCF    06.5
0066:  BCF    03.5
0067:  BSF    06.5
....................    output_d(led5);      output_low(pin_a0);        delay_ms(1);         output_high(pin_a0);      
0068:  BSF    03.5
0069:  CLRF   08
006A:  BCF    03.5
006B:  MOVF   38,W
006C:  MOVWF  08
006D:  BSF    03.5
006E:  BCF    05.0
006F:  BCF    03.5
0070:  BCF    05.0
0071:  MOVLW  01
0072:  MOVWF  5C
0073:  CALL   004
0074:  BSF    03.5
0075:  BCF    05.0
0076:  BCF    03.5
0077:  BSF    05.0
....................    output_d(led6);      output_low(pin_a1);        delay_ms(1);         output_high(pin_a1);        // 100ms thi hien thi lam 5 lan            // 1000ms/8ms = 125 lan trong 1 giay
0078:  BSF    03.5
0079:  CLRF   08
007A:  BCF    03.5
007B:  MOVF   39,W
007C:  MOVWF  08
007D:  BSF    03.5
007E:  BCF    05.1
007F:  BCF    03.5
0080:  BCF    05.1
0081:  MOVLW  01
0082:  MOVWF  5C
0083:  CALL   004
0084:  BSF    03.5
0085:  BCF    05.1
0086:  BCF    03.5
0087:  BSF    05.1
....................    output_d(led7);      output_low(pin_b0);        delay_ms(1);         output_high(pin_b0);         
0088:  BSF    03.5
0089:  CLRF   08
008A:  BCF    03.5
008B:  MOVF   3A,W
008C:  MOVWF  08
008D:  BSF    03.5
008E:  BCF    06.0
008F:  BCF    03.5
0090:  BCF    06.0
0091:  MOVLW  01
0092:  MOVWF  5C
0093:  CALL   004
0094:  BSF    03.5
0095:  BCF    06.0
0096:  BCF    03.5
0097:  BSF    06.0
0098:  RETURN
.................... }
.................... 
.................... void delay_quet_led(unsigned int8 h)
.................... {
....................    unsigned int8 l;
....................    for(l=0;l<h;l++)
0099:  CLRF   5B
009A:  MOVF   5A,W
009B:  SUBWF  5B,W
009C:  BTFSC  03.0
009D:  GOTO   0A1
....................    {
....................       quet_led();   
009E:  CALL   018
009F:  INCF   5B,F
00A0:  GOTO   09A
....................    }
00A1:  RETURN
.................... }
.................... 
.................... void phim_mod()         // kiem tra nut nhan mod
.................... {
....................    if(input(mod)==0)      // kiem tra co nhan nut khong
*
040C:  BSF    03.5
040D:  BSF    09.1
040E:  BCF    03.5
040F:  BTFSC  09.1
0410:  GOTO   4B4
....................    {
....................       quet_led();     // chong doi nut nhan
0411:  CALL   018
....................       quet_led();
0412:  CALL   018
....................       quet_led();
0413:  CALL   018
....................       if(input(mod)==0)   // con nhan nut khong
0414:  BSF    03.5
0415:  BSF    09.1
0416:  BCF    03.5
0417:  BTFSC  09.1
0418:  GOTO   4B4
....................       {  
....................          if(tt_mod==0)
0419:  MOVF   20,F
041A:  BTFSS  03.2
041B:  GOTO   466
041C:  MOVF   21,F
041D:  BTFSS  03.2
041E:  GOTO   466
041F:  MOVF   22,F
0420:  BTFSS  03.2
0421:  GOTO   466
0422:  MOVF   23,F
0423:  BTFSS  03.2
0424:  GOTO   466
....................          {
....................             dem=0;
0425:  CLRF   27
0426:  CLRF   26
0427:  CLRF   25
0428:  CLRF   24
....................             do
....................             {
....................                dem++;
0429:  MOVLW  01
042A:  ADDWF  24,F
042B:  BTFSC  03.0
042C:  INCF   25,F
042D:  BTFSC  03.2
042E:  INCF   26,F
042F:  BTFSC  03.2
0430:  INCF   27,F
....................                quet_led();
0431:  CALL   018
....................             }
....................             while((input(mod)==0)&&(dem<625));           // cho nha phim
0432:  BSF    03.5
0433:  BSF    09.1
0434:  BCF    03.5
0435:  BTFSC  09.1
0436:  GOTO   447
0437:  MOVF   27,F
0438:  BTFSS  03.2
0439:  GOTO   447
043A:  MOVF   26,F
043B:  BTFSS  03.2
043C:  GOTO   447
043D:  MOVF   25,W
043E:  SUBLW  02
043F:  BTFSS  03.0
0440:  GOTO   447
0441:  BTFSS  03.2
0442:  GOTO   429
0443:  MOVF   24,W
0444:  SUBLW  70
0445:  BTFSC  03.0
0446:  GOTO   429
.................... 
....................             if(dem>600)
0447:  MOVF   27,F
0448:  BTFSS  03.2
0449:  GOTO   458
044A:  MOVF   26,F
044B:  BTFSS  03.2
044C:  GOTO   458
044D:  MOVF   25,W
044E:  SUBLW  01
044F:  BTFSC  03.0
0450:  GOTO   465
0451:  XORLW  FF
0452:  BTFSS  03.2
0453:  GOTO   458
0454:  MOVF   24,W
0455:  SUBLW  58
0456:  BTFSC  03.0
0457:  GOTO   465
....................             {
....................                tt_mod=1;
0458:  CLRF   23
0459:  CLRF   22
045A:  CLRF   21
045B:  MOVLW  01
045C:  MOVWF  20
....................                tt_mode();
045D:  CALL   116
....................                while(input(mod)==0)
045E:  BSF    03.5
045F:  BSF    09.1
0460:  BCF    03.5
0461:  BTFSC  09.1
0462:  GOTO   465
....................                {
....................                   quet_led();   
0463:  CALL   018
0464:  GOTO   45E
....................                }
....................             }   
....................          }
0465:  GOTO   4B4
....................          else if(tt_mod==1)
0466:  DECFSZ 20,W
0467:  GOTO   47F
0468:  MOVF   21,F
0469:  BTFSS  03.2
046A:  GOTO   47F
046B:  MOVF   22,F
046C:  BTFSS  03.2
046D:  GOTO   47F
046E:  MOVF   23,F
046F:  BTFSS  03.2
0470:  GOTO   47F
....................          {
....................             tt_mod=2;
0471:  CLRF   23
0472:  CLRF   22
0473:  CLRF   21
0474:  MOVLW  02
0475:  MOVWF  20
....................             tt_mode();
0476:  CALL   116
....................             while(input(mod)==0)
0477:  BSF    03.5
0478:  BSF    09.1
0479:  BCF    03.5
047A:  BTFSC  09.1
047B:  GOTO   47E
....................             {
....................                quet_led();   
047C:  CALL   018
047D:  GOTO   477
....................             }
....................          }
047E:  GOTO   4B4
....................          else if(tt_mod==2)
047F:  MOVF   20,W
0480:  SUBLW  02
0481:  BTFSS  03.2
0482:  GOTO   4B4
0483:  MOVF   21,F
0484:  BTFSS  03.2
0485:  GOTO   4B4
0486:  MOVF   22,F
0487:  BTFSS  03.2
0488:  GOTO   4B4
0489:  MOVF   23,F
048A:  BTFSS  03.2
048B:  GOTO   4B4
....................          {
....................             tt_mod=0;
048C:  CLRF   23
048D:  CLRF   22
048E:  CLRF   21
048F:  CLRF   20
....................             output_high(loa);       delay_quet_led(15); 
0490:  BSF    03.5
0491:  BCF    05.2
0492:  BCF    03.5
0493:  BSF    05.2
0494:  MOVLW  0F
0495:  MOVWF  5A
0496:  CALL   099
....................             output_low(loa);        delay_quet_led(15); 
0497:  BSF    03.5
0498:  BCF    05.2
0499:  BCF    03.5
049A:  BCF    05.2
049B:  MOVLW  0F
049C:  MOVWF  5A
049D:  CALL   099
....................             output_high(loa);       delay_quet_led(15); 
049E:  BSF    03.5
049F:  BCF    05.2
04A0:  BCF    03.5
04A1:  BSF    05.2
04A2:  MOVLW  0F
04A3:  MOVWF  5A
04A4:  CALL   099
....................             output_low(loa);        delay_quet_led(15); 
04A5:  BSF    03.5
04A6:  BCF    05.2
04A7:  BCF    03.5
04A8:  BCF    05.2
04A9:  MOVLW  0F
04AA:  MOVWF  5A
04AB:  CALL   099
....................             tt_mode();
04AC:  CALL   116
....................             while(input(mod)==0)
04AD:  BSF    03.5
04AE:  BSF    09.1
04AF:  BCF    03.5
04B0:  BTFSC  09.1
04B1:  GOTO   4B4
....................             {
....................                quet_led();   
04B2:  CALL   018
04B3:  GOTO   4AD
....................             }
....................          }
....................       }
....................    }
04B4:  BCF    0A.3
04B5:  BCF    0A.4
04B6:  GOTO   613 (RETURN)
.................... }
.................... 
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
....................  void phim_up()
....................  {
....................    if(input(up)==0)
04B7:  BSF    03.5
04B8:  BSF    09.0
04B9:  BCF    03.5
04BA:  BTFSC  09.0
04BB:  GOTO   53C
....................    {
....................      delay_quet_led(3);
04BC:  MOVLW  03
04BD:  MOVWF  5A
04BE:  CALL   099
....................       if (input(up)==0)
04BF:  BSF    03.5
04C0:  BSF    09.0
04C1:  BCF    03.5
04C2:  BTFSC  09.0
04C3:  GOTO   53C
....................       {
....................          if(tt_mod==1)
04C4:  DECFSZ 20,W
04C5:  GOTO   4FF
04C6:  MOVF   21,F
04C7:  BTFSS  03.2
04C8:  GOTO   4FF
04C9:  MOVF   22,F
04CA:  BTFSS  03.2
04CB:  GOTO   4FF
04CC:  MOVF   23,F
04CD:  BTFSS  03.2
04CE:  GOTO   4FF
....................          {  
....................             ghnd++;
04CF:  INCF   47,F
....................             delay_quet_led(30);
04D0:  MOVLW  1E
04D1:  MOVWF  5A
04D2:  CALL   099
....................             if(ghnd>80)          ghnd=80;
04D3:  BTFSC  47.7
04D4:  GOTO   4DB
04D5:  MOVF   47,W
04D6:  SUBLW  50
04D7:  BTFSC  03.0
04D8:  GOTO   4DB
04D9:  MOVLW  50
04DA:  MOVWF  47
....................             write_eeprom(1,ghnd);
04DB:  MOVF   0B,W
04DC:  MOVWF  77
04DD:  BCF    0B.7
04DE:  MOVLW  01
04DF:  BSF    03.6
04E0:  MOVWF  0D
04E1:  BCF    03.6
04E2:  MOVF   47,W
04E3:  BSF    03.6
04E4:  MOVWF  0C
04E5:  BSF    03.5
04E6:  BCF    0C.7
04E7:  BSF    0C.2
04E8:  MOVLW  55
04E9:  MOVWF  0D
04EA:  MOVLW  AA
04EB:  MOVWF  0D
04EC:  BSF    0C.1
04ED:  BTFSC  0C.1
04EE:  GOTO   4ED
04EF:  BCF    0C.2
04F0:  MOVF   77,W
04F1:  BCF    03.5
04F2:  BCF    03.6
04F3:  IORWF  0B,F
....................             ghnd=read_eeprom(1);
04F4:  MOVLW  01
04F5:  BSF    03.6
04F6:  MOVWF  0D
04F7:  BSF    03.5
04F8:  BCF    0C.7
04F9:  BSF    0C.0
04FA:  BCF    03.5
04FB:  MOVF   0C,W
04FC:  BCF    03.6
04FD:  MOVWF  47
....................          }
04FE:  GOTO   538
....................          else if(tt_mod==2)
04FF:  MOVF   20,W
0500:  SUBLW  02
0501:  BTFSS  03.2
0502:  GOTO   538
0503:  MOVF   21,F
0504:  BTFSS  03.2
0505:  GOTO   538
0506:  MOVF   22,F
0507:  BTFSS  03.2
0508:  GOTO   538
0509:  MOVF   23,F
050A:  BTFSS  03.2
050B:  GOTO   538
....................          {
....................             ghda++;
050C:  INCF   48,F
....................             if(ghda>99)          ghda=99;
050D:  BTFSC  48.7
050E:  GOTO   515
050F:  MOVF   48,W
0510:  SUBLW  63
0511:  BTFSC  03.0
0512:  GOTO   515
0513:  MOVLW  63
0514:  MOVWF  48
....................             write_eeprom(2,ghda);
0515:  MOVF   0B,W
0516:  MOVWF  77
0517:  BCF    0B.7
0518:  MOVLW  02
0519:  BSF    03.6
051A:  MOVWF  0D
051B:  BCF    03.6
051C:  MOVF   48,W
051D:  BSF    03.6
051E:  MOVWF  0C
051F:  BSF    03.5
0520:  BCF    0C.7
0521:  BSF    0C.2
0522:  MOVLW  55
0523:  MOVWF  0D
0524:  MOVLW  AA
0525:  MOVWF  0D
0526:  BSF    0C.1
0527:  BTFSC  0C.1
0528:  GOTO   527
0529:  BCF    0C.2
052A:  MOVF   77,W
052B:  BCF    03.5
052C:  BCF    03.6
052D:  IORWF  0B,F
....................             ghda=read_eeprom(2);
052E:  MOVLW  02
052F:  BSF    03.6
0530:  MOVWF  0D
0531:  BSF    03.5
0532:  BCF    0C.7
0533:  BSF    0C.0
0534:  BCF    03.5
0535:  MOVF   0C,W
0536:  BCF    03.6
0537:  MOVWF  48
....................          }
....................          tt_mode();
0538:  CALL   116
....................          delay_quet_led(10);
0539:  MOVLW  0A
053A:  MOVWF  5A
053B:  CALL   099
.................... //!         while(input(up)==0)
.................... //!         {
.................... //!            quet_led();
.................... //!         }
....................      }
....................    }
053C:  BCF    0A.3
053D:  BCF    0A.4
053E:  GOTO   614 (RETURN)
....................  }
....................  
.................... //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
.................... void phim_dw()
....................  {
....................    if (input(dw)==0)
053F:  BSF    03.5
0540:  BSF    09.2
0541:  BCF    03.5
0542:  BTFSC  09.2
0543:  GOTO   5BA
....................    {
....................       delay_quet_led(3);
0544:  MOVLW  03
0545:  MOVWF  5A
0546:  CALL   099
....................       if (input(dw)==0)
0547:  BSF    03.5
0548:  BSF    09.2
0549:  BCF    03.5
054A:  BTFSC  09.2
054B:  GOTO   5BA
....................       {
....................          if(tt_mod==1)
054C:  DECFSZ 20,W
054D:  GOTO   582
054E:  MOVF   21,F
054F:  BTFSS  03.2
0550:  GOTO   582
0551:  MOVF   22,F
0552:  BTFSS  03.2
0553:  GOTO   582
0554:  MOVF   23,F
0555:  BTFSS  03.2
0556:  GOTO   582
....................          {
....................                ghnd--;
0557:  DECF   47,F
....................                delay_quet_led(30);
0558:  MOVLW  1E
0559:  MOVWF  5A
055A:  CALL   099
....................             if(ghnd<0)          ghnd=0;
055B:  BTFSS  47.7
055C:  GOTO   55E
055D:  CLRF   47
....................             write_eeprom(1,ghnd);
055E:  MOVF   0B,W
055F:  MOVWF  77
0560:  BCF    0B.7
0561:  MOVLW  01
0562:  BSF    03.6
0563:  MOVWF  0D
0564:  BCF    03.6
0565:  MOVF   47,W
0566:  BSF    03.6
0567:  MOVWF  0C
0568:  BSF    03.5
0569:  BCF    0C.7
056A:  BSF    0C.2
056B:  MOVLW  55
056C:  MOVWF  0D
056D:  MOVLW  AA
056E:  MOVWF  0D
056F:  BSF    0C.1
0570:  BTFSC  0C.1
0571:  GOTO   570
0572:  BCF    0C.2
0573:  MOVF   77,W
0574:  BCF    03.5
0575:  BCF    03.6
0576:  IORWF  0B,F
....................             ghnd=read_eeprom(1);
0577:  MOVLW  01
0578:  BSF    03.6
0579:  MOVWF  0D
057A:  BSF    03.5
057B:  BCF    0C.7
057C:  BSF    0C.0
057D:  BCF    03.5
057E:  MOVF   0C,W
057F:  BCF    03.6
0580:  MOVWF  47
....................          }
0581:  GOTO   5B6
....................          else if(tt_mod==2)
0582:  MOVF   20,W
0583:  SUBLW  02
0584:  BTFSS  03.2
0585:  GOTO   5B6
0586:  MOVF   21,F
0587:  BTFSS  03.2
0588:  GOTO   5B6
0589:  MOVF   22,F
058A:  BTFSS  03.2
058B:  GOTO   5B6
058C:  MOVF   23,F
058D:  BTFSS  03.2
058E:  GOTO   5B6
....................          {
....................             ghda--;
058F:  DECF   48,F
....................             if(ghda<0)          ghda=0;
0590:  BTFSS  48.7
0591:  GOTO   593
0592:  CLRF   48
....................             write_eeprom(2,ghda);
0593:  MOVF   0B,W
0594:  MOVWF  77
0595:  BCF    0B.7
0596:  MOVLW  02
0597:  BSF    03.6
0598:  MOVWF  0D
0599:  BCF    03.6
059A:  MOVF   48,W
059B:  BSF    03.6
059C:  MOVWF  0C
059D:  BSF    03.5
059E:  BCF    0C.7
059F:  BSF    0C.2
05A0:  MOVLW  55
05A1:  MOVWF  0D
05A2:  MOVLW  AA
05A3:  MOVWF  0D
05A4:  BSF    0C.1
05A5:  BTFSC  0C.1
05A6:  GOTO   5A5
05A7:  BCF    0C.2
05A8:  MOVF   77,W
05A9:  BCF    03.5
05AA:  BCF    03.6
05AB:  IORWF  0B,F
....................             ghda=read_eeprom(2);
05AC:  MOVLW  02
05AD:  BSF    03.6
05AE:  MOVWF  0D
05AF:  BSF    03.5
05B0:  BCF    0C.7
05B1:  BSF    0C.0
05B2:  BCF    03.5
05B3:  MOVF   0C,W
05B4:  BCF    03.6
05B5:  MOVWF  48
....................          }
....................          tt_mode();
05B6:  CALL   116
....................          delay_quet_led(10);
05B7:  MOVLW  0A
05B8:  MOVWF  5A
05B9:  CALL   099
.................... //!         while(input(dw)==0)
.................... //!         {
.................... //!            quet_led();
.................... //!         }
....................       }
....................    }
05BA:  BCF    0A.3
05BB:  BCF    0A.4
05BC:  GOTO   615 (RETURN)
....................  } 
.................... 
.................... void main()
05BD:  MOVF   03,W
05BE:  ANDLW  1F
05BF:  MOVWF  03
05C0:  MOVLW  FF
05C1:  MOVWF  49
05C2:  BSF    03.5
05C3:  BSF    1F.0
05C4:  BSF    1F.1
05C5:  BSF    1F.2
05C6:  BCF    1F.3
05C7:  MOVLW  07
05C8:  MOVWF  1C
05C9:  BCF    03.7
.................... {
....................    set_tris_d(0x00);
*
05E1:  MOVLW  00
05E2:  BSF    03.5
05E3:  MOVWF  08
....................    set_tris_c(0x00);
05E4:  MOVWF  07
05E5:  BCF    03.5
05E6:  MOVWF  49
....................    set_tris_e(0xff);
05E7:  BSF    03.5
05E8:  BSF    09.0
05E9:  BSF    09.1
05EA:  BSF    09.2
....................    tt_mode();
05EB:  BCF    03.5
05EC:  CALL   116
....................    quet_led();
05ED:  CALL   018
....................    tt_mod=0;
05EE:  CLRF   23
05EF:  CLRF   22
05F0:  CLRF   21
05F1:  CLRF   20
....................    output_low(rl1);
05F2:  BCF    49.1
05F3:  MOVF   49,W
05F4:  BSF    03.5
05F5:  MOVWF  07
05F6:  BCF    03.5
05F7:  BCF    07.1
....................    output_low(rl2);
05F8:  BCF    49.2
05F9:  MOVF   49,W
05FA:  BSF    03.5
05FB:  MOVWF  07
05FC:  BCF    03.5
05FD:  BCF    07.2
....................    ghnd=read_eeprom(1);
05FE:  MOVLW  01
05FF:  BSF    03.6
0600:  MOVWF  0D
0601:  BSF    03.5
0602:  BCF    0C.7
0603:  BSF    0C.0
0604:  BCF    03.5
0605:  MOVF   0C,W
0606:  BCF    03.6
0607:  MOVWF  47
....................    ghda=read_eeprom(2);
0608:  MOVLW  02
0609:  BSF    03.6
060A:  MOVWF  0D
060B:  BSF    03.5
060C:  BCF    0C.7
060D:  BSF    0C.0
060E:  BCF    03.5
060F:  MOVF   0C,W
0610:  BCF    03.6
0611:  MOVWF  48
....................    while(true)
....................    {
....................       phim_mod();
0612:  GOTO   40C
....................       phim_up();
0613:  GOTO   4B7
....................       phim_dw();
0614:  GOTO   53F
....................       tt_mode();
0615:  CALL   116
....................       quet_led();
0616:  CALL   018
0617:  GOTO   612
....................    }
.................... }
.................... 
0618:  SLEEP
.................... 

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
